
(funcall prescient-cache-callback :version (quote 5) :history (quote #s(hash-table size 145 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("equity_future_feed_processor.h" 91 "equity_future_feed_processor.cpp" 90 "lcw/lcww/lcww_util_common_area.cpp:46:    warrant.lastTradeDate()                = UtilCommonArea::getLastTradeDate();               // EQUIVALENCE(EW2BUF(81),EWDATE_E,EWLASTTRADEDATE)" 35 "/Users/sdayts/workspaces/eqwrnt2/lddbutils/lddbutils/lddbutils_comdb2_util.cpp" 89 "Functions: validateInsert (Other)" 88 "#s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data (name static void BloombergLP::lddbutils::Comdb2Util::validateDelete(const char *sql, int rc) kind 254 location #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data (uri file:///Users/sdayts/workspaces/eqwrnt2/lddbutils/lddbutils/lddbutils_comdb2_util.cpp range #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data (start #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data (line 57 character 17)) end #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data (line 57 character 31))))))))" 87 "Functions: validateBind (Other)" 86 "| p206         | meusr                         Mesa user machines  |
| p309         | tkusr                         Tokyo user machines |
| tkusr-rr-853 | tkusr                         Tokyo user machines |
| n129         | tkusr                         Tokyo user machines |
| n146         | tkusr                         Tokyo user machines |
| n152         | tkusr                         Tokyo user machines |
| p396         | tkusr                         Tokyo user machines |
| tkusr-ob-225 | tkusr                         Tokyo user machines |
| tkusr-ob-400 | tkusr                         Tokyo user machines |" 85 " *%  *Messages*             36986 Messages         " 51 "/Users/sdayts/workspaces/eqwrnt2/wrntcax/wrntcax.c" 59 "org-todo" 78 "eqwrnt.org:1531:ZOMO cdbgwodb" 82 "ivy--occurs-list" 26 "/Users/sdayts/workspaces/eqwrnt2/eqwrnt2acc/eqwrnt2acc/eqwrnt2acc_api.h" 62 "getwarrantlist/" 84 "getwarrantlist.mk" 83 "sort-lines" 4 "delete-duplicate-lines" 3 "sd/split-current-line" 25 "/Users/sdayts/workspaces/eqwrnt2/lcw/lcw/t/lcww_util.t.h" 58 "/Users/sdayts/workspaces/eqwrnt2/lcw_validator/lcw_validator.m.cpp" 80 "split-line" 79 "ldrvexpirenotice.m.cpp" 65 "balance-windows" 53 "/Users/sdayts/workspaces/eqwrnt2/lcw-integration-tester/lcw-integration-tester.sh" 77 "/Users/sdayts/workspaces/eqwrnt2/lcw/lcw/lcw.t.mk" 76 "sd/vc-refresh-state-all" 61 "/Users/sdayts/.emacs.d/myinit.org" 93 "lcw/lcww/lcww_dispatcher.cpp:67:, BasClient(NULL)" 70 "lcw/t/lcww_pipelines.t.cpp:1389:                            , \"BUSLOGIC->CHIPMUNK->COMDB2\"" 75 "lcw/t/lcww_pipelines.t.cpp:1388:                            , \"BUSLOGIC->BAS->COMDB2\"" 74 "lcw/t/lcww_dispatcher.t.cpp:128:        BREG_OVERRIDE_NICE_F(bbit_eqwrnt2_pipeline, \"BUSLOGIC->BAS->COMDB2\");" 73 "lcw/lcww/lcww_dispatcher.cpp:326:        factory.DbTier    = d_bregSettings.databaseTier();" 68 "lcw/t/lcwt_main.t.cpp:7:#include <basapi_tcpsyncbasclient.h>" 72 "lcw/lcww/lcww_dispatcher.h:49:    BasClientPtr                     BasClient;" 71 "lcw/t/lcww_pipelines.t.cpp:73:            factory.BasClient = lddbutils::BasClientFactory<eqwrnt2acc::Request, eqwrnt2acc::Response>::createBasInProcessClient<s_eqwrnt2svc::RequestRouter, s_eqwrnt2svc::RequestProcessor>(" 69 "eqwrnt2acc/eqwrnt2acc_breg_settings.h:39:    bsl::string basServicePipeline();            // bbit_eqwrnt2_bas_service_pipeline" 48 "re" 67 "kill-emacs" 2 "ldrvexpirenotice/" 66 "processWarrant: (Function)" 64 "     eqwrnt2acc.gtes...      1897 Makefile         ~/workspaces/eqwrnt2/eqwrnt2acc/eqwrnt2acc/t/eqwrnt2acc.gtest.t.mk" 60 "/Users/sdayts/notes/development_notes.org" 63 "ivy-occur" 31 "eqwrnt2acc/eqwrnt2acc_accessor_bas.cpp:43:    const char LOG_CATEGORY[] = \"EQWRNT2ACC.ACCESSOR.BAS\";" 57 "eqwrnt2acc/eqwrnt2acc_accessor_factory.cpp:127:    return bsl::make_shared<AccessorBas>(accessor, getDefaultBasClient());" 56 "eqwrnt2acc/eqwrnt2acc_breg_settings.cpp:39:        return bbit_eqwrnt2_bas_service_pipeline__rc(list_ptr, numelts_ptr, maxelts);" 55 "README.md:4:**eqwrnt2acc** is a DPKG library that contains modern C++ interface to [equity warrants database](https://bbgithub.dev.bloomberg.com/lddb/documentation/blob/master/eqwrnt.md). The library has a dependency on [lddbutils](https://bbgithub.dev.bloomberg.com/lddb/lddbutils) library." 54 "eqwrnt2acc/eqwrnt2acc_breg_settings.cpp:81:          d_basServicePipeline" 50 "eqwrnt2acc/eqwrnt2acc_breg_settings.cpp:37:    bool eqwrnt2_bas_service_pipeline_breg_accessor(char * list_ptr, int* numelts_ptr, int maxelts)" 52 "eqwrnt2acc/eqwrnt2acc_breg_settings.cpp:17:    const bsl::string DEFAULT_EQWRNT2_BAS_PIPELINE = \"COMDB2\";" 49 "/Users/sdayts/workspaces/eqwrnt2/lcw/lcw/lcw~w/accwrnt.f" 46 "mc/sort-regions" 47 "lcw/t/lcww_pipelines.t.cpp:12:#include <s_eqwrnt2svc_requestprocessor.h>" 45 "eqwrnt_calcrt_flds.org" 41 "org-table-export" 43 "org-odt-export-as-odf" 42 "/Users/sdayts/workspaces/eqwrnt2/lcw/lcw/lcww/lcww_util_common_area.cpp" 44 "org-table-convert-region" 40 "upcase-dwim" 39 "upcase-word" 38 "upcase-region" 37 "EQWRNT2" 36 "lcw/t/lcww_discovery_ewfunc_update.t.cpp:1003:        // setting of EWLASTTRADEDATE happens last, thus EWDATE_E must reflect" 30 "counsel-git-grep-occur" 24 "*vterm-1*" 81 "url-setup-privacy-info" 34 "lcw/lcww/lcww_util_common_area.cpp:985:    return lddbutils::DateUtil::convertToYYYYMMDD(EWLASTTRADEDATE[2], EWLASTTRADEDATE[0], EWLASTTRADEDATE[1]);" 32 "ivy-occur-previous-line" 33 "" 29 "ivy--occur-default" 28 "fatal: -e option, '\\(E\\)[^W': Unmatched [ or [^" 27 "counsel--git-grep-occur-cmd" 23 "wrntred.cpp:2:static char RCSid[] = \"$Header: /bbsrc/eqtytasks/wrntred/wrntred.cpp,v 1.6 2009/12/04 19:51:09 ychauhan Exp $\";" 21 "list-packages" 20 "registry" 18 "eqwrnt-cx-registry.json" 17 "control<eqwrntcxsvc>" 16 "README.md" 15 "/Users/sdayts/notes/eqwrnt_calcrt_flds.org" 1 "/Users/sdayts/notes/development_scratch.org" 11 "/Users/sdayts/workspaces/equity_future_feed_processor/equity_future_feed_processor.cpp" 95 "ivy-re-builders-alist" 14 "eqwrnt2/" 7 "/Users/sdayts/workspaces/eqwrnt2/wrnt_sweep/wupdel/wupdel.mk" 13 "/Users/sdayts/notes/eqwrnt_remotes.org" 10 "/Users/sdayts/workspaces/calcrtx/eqwrntcxsvc/debian/control" 9 "debian/" 6 "./" 5 "workspaces/" 8 "functions/" 100 "index/" 99 "f_xxefu2/" 98 "eqtyftdb_update.c" 96 "modify-syntax-entry" 97 "myinit.org" 94 "#s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data (name bool BloombergLP::effp::EquityFutureFeedProcessor::isFullListing() const kind 6 location #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data (uri file:///Users/sdayts/workspaces/equity_future_feed_processor/equity_future_feed_processor.h range #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data (start #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data (line 70 character 9)) end #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data (line 70 character 22))))))))" 92 "/Users/sdayts/notes/eqwrnt.org" 12 "     wrntred.cpp            23444 C++//            ~/workspaces/eqwrnt2/wrntred/wrntred.cpp" 22 "projectile-grep" 19 "/Users/sdayts/notes/calcrtx.org" 0))) :frequency (quote #s(hash-table size 217 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("re" 1.398089320100642 "save-buffers-kill-emacs" 0.33802759110996905 "     stats.csc2              1194 Fundamental      ~/workspaces/eqwrnt2/eqwrnt2acc/eqwrnt2acc/dbsetup/stats.csc2" 1.5966215559907848 " *%  *Messages*              1507 Messages         " 0.3400649200459644 "swiper-include-line-number-in-search" 0.3410881845997637 "swiper-goto-start-of-match" 0.34211452818431665 "swiper-action-recenter" 0.3431439600645102 "ivy-display-style" 0.34417648953310953 "ivy-use-selectable-prompt" 0.834368456163067 "ivy-push-view" 4.127326957718947 "ivy-switch-view" 5.952138262521151 "test1" 1.069461678676767 "     eqwrnt2acc_acce...      7743 C++//            ~/workspaces/eqwrnt2/eqwrnt2acc/eqwrnt2acc/eqwrnt2acc_accessor.h" 0.9014585539178714 "     eqwrnt2acc_acce...      8478 C++//            ~/workspaces/eqwrnt2/eqwrnt2acc/eqwrnt2acc/eqwrnt2acc_accessor_comdb2.h" 0.7395128842353844 "test2" 0.35467421609145244 "ivy-pop-view" 0.3557414404126905 "     *scratch*                144 Lisp Interaction " 0.3643956573894368 "{}" 0.3699111320952587 "     myinit.org             81297 Org              ~/.emacs.d/myinit.org" 0.37438355848805627 "org" 0.37664000878066123 "ivy.el" 1.2488292570829822 "{} myinit.org stats.csc2" 0.3846452229159933 "     eqwrnt2acc_acce...     64648 C++//            ~/workspaces/eqwrnt2/eqwrnt2acc/eqwrnt2acc/eqwrnt2acc_accessor_comdb2.cpp" 0.38812790508779954 "/Users/sdayts/workspaces/eqwrnt2/wrntred/wrntred.cpp" 1.2615355153049548 "/Users/sdayts/workspaces/eqwrnt2/wupdel/wupdel.t.cpp" 0.825060478650432 "{} wrntred.cpp wupdel.t.cpp" 0.3963772862467064 "/Users/sdayts/.emacs.d/recentf" 0.3975699962354126 "recentf" 0.39876629512077494 "/Users/sdayts/.emacs.d/myinit.org" 2.5122800696902603 "ivy-fixed-height-minibuffer" 1.218196264581864 "ivy--height" 0.40358759609853784 "ivy-height-alist" 1.219289253618937 "ivy-height" 0.40969627805652836 "counsel-git-grep" 2.0998316387976352 "counsel-git-log" 0.41216556193809956 "counsel-projectile-git-grep" 0.83304628804894 "swiper" 1.2615223494536694 "" 2.2799418920159944 "(&optional initial-input initial-directory cmd)" 0.42858270728967873 "kill-emacs" 10.022938961280323 " *%  *Messages*              1601 Messages         " 0.43376450487636337 "sd/ivy-height" 0.436378850570129 "ivy-posframe-border-width" 0.8994791686656523 "describe-face" 0.44431680976852356 "counsel-describe-face" 4.27224441898748 "internal-border" 1.8042085845321554 "posframe-hide-all" 0.4606285416677907 "ivy-posframe-border" 0.9338068128278597 "README.md.abc" 2.875379742754006 "network-security.data" 0.9622801663554088 "README.md" 1.912769225818652 "complete-symbol" 1.4763180277146506 "ivy-sort-max-size" 0.4965601763518939 "server-visit-hook" 0.49805433937000393 "lsp-pwsh--sess-id" 0.49955299836509925 "gnus-level-killed" 1.0143016608465079 "tooltip-mode-hook" 1.0142696159398863 "xmltok-standalone" 1.0142467269274937 "Info-current-file" 1.0142329936027072 "org-ignore-region" 0.5071142079207761 "ivy-posframe-style" 0.5147898635715258 "posframe.el" 0.5163388802121622 "module-file-suffix" 0.5178925578858197 "sd/open-org-init" 0.5194509106176727 "vterm" 2.652697218907438 "*ansi-term-1*" 0.525731354110276 "*vterm-1*" 2.31001940326925 "ansi-color-names-vector" 0.5304914683793133 "vterm-color-default" 1.073830183215564 " *   *scratch*                174 Lisp Interaction " 0.5369053982086068 "describe-key" 0.5433968759313301 "diff-mode.el.gz" 0.5450319718468707 "vterm-mode-map" 0.5466719878103016 "eqwrnt2acc_api.cpp" 0.5516217042563801 "pwd" 0.5532815489030894 "/Users/sdayts/notes/smf.xml" 0.5566162367776242 "smf.xml" 0.5582911101079481 "/Users/sdayts/notes/junk.org" 0.5599710231774805 "junk.org" 0.5616559911509333 "CMakeLists.txt" 0.5633460292386493 "ldrv_feeds/" 0.5650411526967395 "feeds_deleter.h" 0.5667413768272211 "feeds_deleter.cpp:116:void Deleter::deleteFile(const eoffmsdb::FileSearchKey & key) const {" 0.5684467169781556 "/Users/sdayts/notes/development_scratch.org" 5.467166097620652 "/Users/sdayts/workspaces/equity_future_feed_processor/equity_future_feed_processor.cpp" 1.1828232205111415 "eqtyftdb_utils.cpp:82:        cupdate( eqtyftdb, &ctrl, const_cast<eqtyftdbrecord*>(&updatedRecord), 0 );" 0.5735935877278646 "eqwrnt2/" 3.155060047945555 "lcw-integration-tester/" 0.5787870596412764 "lcw-integration-tester.sh" 0.5805286455780104 "vterm-mode-hook" 1.1663030266519583 "global-hl-line-mode" 0.5857849093861247 "mybig/" 0.5893154985378651 "workspaces/" 3.1613640862671155 "junk/" 0.5928673669331617 "functions/" 0.5946513208958493 "index/" 0.5964406428243222 "f_xxefu2/" 0.598235348870935 "eqtyftdb_update.c" 1.2073256648555493 "modify-syntax-entry" 0.6018409781711584 "myinit.org" 0.6127887798861198 "#s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data (name bool BloombergLP::effp::EquityFutureFeedProcessor::isFullListing() const kind 6 location #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data (uri file:///Users/sdayts/workspaces/equity_future_feed_processor/equity_future_feed_processor.h range #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data (start #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data (line 70 character 9)) end #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data (line 70 character 22))))))))" 0.6183371356998573 "equity_future_feed_processor.h" 0.6201977288865168 "equity_future_feed_processor.cpp" 0.6220639206484622 "/Users/sdayts/workspaces/eqwrnt2/lddbutils/lddbutils/lddbutils_comdb2_util.cpp" 0.623935727831958 "Functions: validateInsert (Other)" 0.62581316733396 "#s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data (name static void BloombergLP::lddbutils::Comdb2Util::validateDelete(const char *sql, int rc) kind 254 location #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data (uri file:///Users/sdayts/workspaces/eqwrnt2/lddbutils/lddbutils/lddbutils_comdb2_util.cpp range #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data (start #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data (line 57 character 17)) end #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data (line 57 character 31))))))))" 0.6276962561022668 "Functions: validateBind (Other)" 0.6295850111356738 "| p206         | meusr                         Mesa user machines  |
| p309         | tkusr                         Tokyo user machines |
| tkusr-rr-853 | tkusr                         Tokyo user machines |
| n129         | tkusr                         Tokyo user machines |
| n146         | tkusr                         Tokyo user machines |
| n152         | tkusr                         Tokyo user machines |
| p396         | tkusr                         Tokyo user machines |
| tkusr-ob-225 | tkusr                         Tokyo user machines |
| tkusr-ob-400 | tkusr                         Tokyo user machines |" 1.2648590377329987 "getwarrantlist/" 0.6391143788261682 "getwarrantlist.mk" 0.6410374913000684 "eqwrnt.org:1531:ZOMO cdbgwodb" 0.6449010937527411 "/Users/sdayts/notes/eqwrnt.org" 4.536186568248135 "sort-lines" 5.129800593247831 "delete-duplicate-lines" 3.7979877545111393 "sd/split-current-line" 4.246819395312595 "/Users/sdayts/workspaces/eqwrnt2/lcw_validator/lcw_validator.m.cpp" 0.6726062478080883 "/Users/sdayts/workspaces/eqwrnt2/eqwrnt2acc/eqwrnt2acc/eqwrnt2acc_api.h" 1.4171443781182744 "split-line" 0.6889689195330736 "org-todo" 0.6931214098997832 "/Users/sdayts/workspaces/eqwrnt2/lcw-integration-tester/lcw-integration-tester.sh" 0.6972989277760897 "/Users/sdayts/workspaces/eqwrnt2/lcw/lcw/lcw.t.mk" 0.6993971191334902 "sd/vc-refresh-state-all" 1.4464488624508136 "lcw/t/lcww_pipelines.t.cpp:1389:                            , \"BUSLOGIC->CHIPMUNK->COMDB2\"" 0.7036124613896758 "lcw/t/lcww_pipelines.t.cpp:1388:                            , \"BUSLOGIC->BAS->COMDB2\"" 0.7057296503406979 "lcw/t/lcww_dispatcher.t.cpp:128:        BREG_OVERRIDE_NICE_F(bbit_eqwrnt2_pipeline, \"BUSLOGIC->BAS->COMDB2\");" 1.4178363694195668 "lcw/t/lcwt_main.t.cpp:7:#include <basapi_tcpsyncbasclient.h>" 0.7121195180029655 "lcw/lcww/lcww_dispatcher.cpp:67:, BasClient(NULL)" 1.4328295461778273 "lcw/lcww/lcww_dispatcher.h:49:    BasClientPtr                     BasClient;" 0.7164115395363275 "lcw/t/lcww_pipelines.t.cpp:73:            factory.BasClient = lddbutils::BasClientFactory<eqwrnt2acc::Request, eqwrnt2acc::Response>::createBasInProcessClient<s_eqwrnt2svc::RequestRouter, s_eqwrnt2svc::RequestProcessor>(" 0.7207294295487541 "lcw/lcww/lcww_dispatcher.cpp:326:        factory.DbTier    = d_bregSettings.databaseTier();" 0.7228981239205157 "balance-windows" 1.4949239822572697 "ldrvexpirenotice/" 0.7316383546629995 "ldrvexpirenotice.m.cpp" 0.7338398742858571 "processWarrant: (Function)" 0.7360480183408797 "/Users/sdayts/notes/development_notes.org" 0.7382628067611632 "eqwrnt2acc/eqwrnt2acc_accessor_bas.cpp:43:    const char LOG_CATEGORY[] = \"EQWRNT2ACC.ACCESSOR.BAS\";" 1.4966664516817014 "     eqwrnt2acc.gtes...      1897 Makefile         ~/workspaces/eqwrnt2/eqwrnt2acc/eqwrnt2acc/t/eqwrnt2acc.gtest.t.mk" 0.747188804859888 "/Users/sdayts/workspaces/eqwrnt2/wrntcax/wrntcax.c" 0.7494371162085136 "/Users/sdayts/workspaces/eqwrnt2/lcw/lcw/t/lcww_util.t.h" 0.7516921927868743 "eqwrnt2acc/eqwrnt2acc_accessor_factory.cpp:127:    return bsl::make_shared<AccessorBas>(accessor, getDefaultBasClient());" 0.7562227231210928 "eqwrnt2acc/eqwrnt2acc_breg_settings.cpp:39:        return bbit_eqwrnt2_bas_service_pipeline__rc(list_ptr, numelts_ptr, maxelts);" 1.5192787772271912 "eqwrnt2acc/eqwrnt2acc_breg_settings.cpp:81:          d_basServicePipeline" 1.537689323919289 "README.md:4:**eqwrnt2acc** is a DPKG library that contains modern C++ interface to [equity warrants database](https://bbgithub.dev.bloomberg.com/lddb/documentation/blob/master/eqwrnt.md). The library has a dependency on [lddbutils](https://bbgithub.dev.bloomberg.com/lddb/lddbutils) library." 0.7653658663581259 "eqwrnt2acc/eqwrnt2acc_breg_settings.cpp:37:    bool eqwrnt2_bas_service_pipeline_breg_accessor(char * list_ptr, int* numelts_ptr, int maxelts)" 0.7699788094052729 " *%  *Messages*             36986 Messages         " 0.7722956964947572 "eqwrnt2acc/eqwrnt2acc_breg_settings.cpp:17:    const bsl::string DEFAULT_EQWRNT2_BAS_PIPELINE = \"COMDB2\";" 0.776950406379376 "eqwrnt2acc/eqwrnt2acc_breg_settings.h:39:    bsl::string basServicePipeline();            // bbit_eqwrnt2_bas_service_pipeline" 0.7792882711929549 "/Users/sdayts/workspaces/eqwrnt2/lcw/lcw/lcw~w/accwrnt.f" 1.5727167107524913 "mc/sort-regions" 0.78398512608332 "lcw/t/lcww_pipelines.t.cpp:12:#include <s_eqwrnt2svc_requestprocessor.h>" 0.79346393184295 "org-table-convert-region" 16.6994187177657 "/Users/sdayts/workspaces/eqwrnt2/lcw/lcw/lcww/lcww_util_common_area.cpp" 0.803057341509771 "org-odt-export-as-odf" 1.6158022032832775 "org-table-export" 0.8078974551636565 "eqwrnt_calcrt_flds.org" 0.8152123778407558 "upcase-dwim" 0.8631032605924442 "upcase-word" 0.8657003616774767 "upcase-region" 0.8683052775100066 "EQWRNT2" 0.8709180316048211 "lcw/lcww/lcww_util_common_area.cpp:46:    warrant.lastTradeDate()                = UtilCommonArea::getLastTradeDate();               // EQUIVALENCE(EW2BUF(81),EWDATE_E,EWLASTTRADEDATE)" 0.8735386475474635 "counsel-git-grep-occur" 1.7845000934734003 "url-setup-privacy-info" 0.8788035596734672 "ivy-occur-previous-line" 0.8814479033836181 "ivy-occur" 1.7735289757628672 "lcw/lcww/lcww_util_common_area.cpp:985:    return lddbutils::DateUtil::convertToYYYYMMDD(EWLASTTRADEDATE[2], EWLASTTRADEDATE[0], EWLASTTRADEDATE[1]);" 0.8867604854519608 "lcw/t/lcww_discovery_ewfunc_update.t.cpp:1003:        // setting of EWLASTTRADEDATE happens last, thus EWDATE_E must reflect" 0.8921050870283477 "ivy--occur-default" 0.8974819010978248 "fatal: -e option, '\\(E\\)[^W': Unmatched [ or [^" 0.9001824484431542 "ivy--occurs-list" 0.90289112180858 "counsel--git-grep-occur-cmd" 0.9110661429076764 "     wrntred.cpp            23444 C++//            ~/workspaces/eqwrnt2/wrntred/wrntred.cpp" 0.9165572373164391 "wrntred.cpp:2:static char RCSid[] = \"$Header: /bbsrc/eqtytasks/wrntred/wrntred.cpp,v 1.6 2009/12/04 19:51:09 ychauhan Exp $\";" 0.9193151828650342 "list-packages" 0.9220814271464737 "projectile-grep" 0.9276389118674717 "registry" 0.9304302024748964 "eqwrnt-cx-registry.json" 0.9332298921513504 "control<eqwrntcxsvc>" 0.93603800616986 "/Users/sdayts/notes/eqwrnt_calcrt_flds.org" 2.8858944399909108 "ivy-re-builders-alist" 0.9445131481500655 "/Users/sdayts/workspaces/eqwrnt2/wrnt_sweep/wupdel/wupdel.mk" 0.9473552137914398 "/Users/sdayts/notes/eqwrnt_remotes.org" 0.9588092525966956 "/Users/sdayts/workspaces/calcrtx/eqwrntcxsvc/debian/control" 0.9616943356035061 "debian/" 0.9762504936564125 "./" 0.9791880578299021 "/Users/sdayts/notes/calcrtx.org" 0.997))) :serial-number (quote 363))
