
(funcall prescient-cache-callback :version (quote 5) :history (quote #s(hash-table size 145 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("equity_future_feed_processor.h" 78 "equity_future_feed_processor.cpp" 77 "lcw/lcww/lcww_util_common_area.cpp:46:    warrant.lastTradeDate()                = UtilCommonArea::getLastTradeDate();               // EQUIVALENCE(EW2BUF(81),EWDATE_E,EWLASTTRADEDATE)" 16 "/Users/sdayts/workspaces/eqwrnt2/lddbutils/lddbutils/lddbutils_comdb2_util.cpp" 76 "Functions: validateInsert (Other)" 75 "#s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data (name static void BloombergLP::lddbutils::Comdb2Util::validateDelete(const char *sql, int rc) kind 254 location #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data (uri file:///Users/sdayts/workspaces/eqwrnt2/lddbutils/lddbutils/lddbutils_comdb2_util.cpp range #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data (start #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data (line 57 character 17)) end #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data (line 57 character 31))))))))" 74 "Functions: validateBind (Other)" 73 "| p206         | meusr                         Mesa user machines  |
| p309         | tkusr                         Tokyo user machines |
| tkusr-rr-853 | tkusr                         Tokyo user machines |
| n129         | tkusr                         Tokyo user machines |
| n146         | tkusr                         Tokyo user machines |
| n152         | tkusr                         Tokyo user machines |
| p396         | tkusr                         Tokyo user machines |
| tkusr-ob-225 | tkusr                         Tokyo user machines |
| tkusr-ob-400 | tkusr                         Tokyo user machines |" 72 " *%  *Messages*             36986 Messages         " 36 "/Users/sdayts/workspaces/eqwrnt2/wrntcax/wrntcax.c" 44 "org-todo" 63 "eqwrnt.org:1531:ZOMO cdbgwodb" 67 "ivy--occurs-list" 7 "/Users/sdayts/workspaces/eqwrnt2/eqwrnt2acc/eqwrnt2acc/eqwrnt2acc_api.h" 47 "getwarrantlist/" 69 "getwarrantlist.mk" 68 "sort-lines" 31 "delete-duplicate-lines" 30 "sd/split-current-line" 6 "/Users/sdayts/workspaces/eqwrnt2/lcw/lcw/t/lcww_util.t.h" 43 "/Users/sdayts/workspaces/eqwrnt2/lcw_validator/lcw_validator.m.cpp" 65 "split-line" 64 "ldrvexpirenotice.m.cpp" 50 "balance-windows" 38 "/Users/sdayts/workspaces/eqwrnt2/lcw-integration-tester/lcw-integration-tester.sh" 62 "/Users/sdayts/workspaces/eqwrnt2/lcw/lcw/lcw.t.mk" 61 "sd/vc-refresh-state-all" 46 "/Users/sdayts/.emacs.d/myinit.org" 80 "lcw/lcww/lcww_dispatcher.cpp:67:, BasClient(NULL)" 55 "lcw/t/lcww_pipelines.t.cpp:1389:                            , \"BUSLOGIC->CHIPMUNK->COMDB2\"" 60 "lcw/t/lcww_pipelines.t.cpp:1388:                            , \"BUSLOGIC->BAS->COMDB2\"" 59 "lcw/t/lcww_dispatcher.t.cpp:128:        BREG_OVERRIDE_NICE_F(bbit_eqwrnt2_pipeline, \"BUSLOGIC->BAS->COMDB2\");" 58 "lcw/lcww/lcww_dispatcher.cpp:326:        factory.DbTier    = d_bregSettings.databaseTier();" 53 "lcw/t/lcwt_main.t.cpp:7:#include <basapi_tcpsyncbasclient.h>" 57 "lcw/lcww/lcww_dispatcher.h:49:    BasClientPtr                     BasClient;" 56 "lcw/t/lcww_pipelines.t.cpp:73:            factory.BasClient = lddbutils::BasClientFactory<eqwrnt2acc::Request, eqwrnt2acc::Response>::createBasInProcessClient<s_eqwrnt2svc::RequestRouter, s_eqwrnt2svc::RequestProcessor>(" 54 "eqwrnt2acc/eqwrnt2acc_breg_settings.h:39:    bsl::string basServicePipeline();            // bbit_eqwrnt2_bas_service_pipeline" 33 "re" 52 "kill-emacs" 0 "ldrvexpirenotice/" 51 "processWarrant: (Function)" 49 "     eqwrnt2acc.gtes...      1897 Makefile         ~/workspaces/eqwrnt2/eqwrnt2acc/eqwrnt2acc/t/eqwrnt2acc.gtest.t.mk" 45 "/Users/sdayts/notes/development_notes.org" 48 "ivy-occur" 12 "eqwrnt2acc/eqwrnt2acc_accessor_bas.cpp:43:    const char LOG_CATEGORY[] = \"EQWRNT2ACC.ACCESSOR.BAS\";" 42 "eqwrnt2acc/eqwrnt2acc_accessor_factory.cpp:127:    return bsl::make_shared<AccessorBas>(accessor, getDefaultBasClient());" 41 "eqwrnt2acc/eqwrnt2acc_breg_settings.cpp:39:        return bbit_eqwrnt2_bas_service_pipeline__rc(list_ptr, numelts_ptr, maxelts);" 40 "README.md:4:**eqwrnt2acc** is a DPKG library that contains modern C++ interface to [equity warrants database](https://bbgithub.dev.bloomberg.com/lddb/documentation/blob/master/eqwrnt.md). The library has a dependency on [lddbutils](https://bbgithub.dev.bloomberg.com/lddb/lddbutils) library." 39 "eqwrnt2acc/eqwrnt2acc_breg_settings.cpp:81:          d_basServicePipeline" 35 "eqwrnt2acc/eqwrnt2acc_breg_settings.cpp:37:    bool eqwrnt2_bas_service_pipeline_breg_accessor(char * list_ptr, int* numelts_ptr, int maxelts)" 37 "eqwrnt2acc/eqwrnt2acc_breg_settings.cpp:17:    const bsl::string DEFAULT_EQWRNT2_BAS_PIPELINE = \"COMDB2\";" 34 "/Users/sdayts/workspaces/eqwrnt2/lcw/lcw/lcw~w/accwrnt.f" 29 "mc/sort-regions" 32 "lcw/t/lcww_pipelines.t.cpp:12:#include <s_eqwrnt2svc_requestprocessor.h>" 28 "eqwrnt_calcrt_flds.org" 22 "org-table-export" 25 "org-odt-export-as-odf" 24 "/Users/sdayts/workspaces/eqwrnt2/lcw/lcw/lcww/lcww_util_common_area.cpp" 26 "org-table-convert-region" 21 "upcase-dwim" 20 "upcase-word" 19 "upcase-region" 18 "EQWRNT2" 17 "lcw/t/lcww_discovery_ewfunc_update.t.cpp:1003:        // setting of EWLASTTRADEDATE happens last, thus EWDATE_E must reflect" 11 "counsel-git-grep-occur" 5 "*vterm-1*" 66 "url-setup-privacy-info" 15 "lcw/lcww/lcww_util_common_area.cpp:985:    return lddbutils::DateUtil::convertToYYYYMMDD(EWLASTTRADEDATE[2], EWLASTTRADEDATE[0], EWLASTTRADEDATE[1]);" 13 "ivy-occur-previous-line" 14 "" 10 "ivy--occur-default" 9 "fatal: -e option, '\\(E\\)[^W': Unmatched [ or [^" 8 "counsel--git-grep-occur-cmd" 4 "wrntred.cpp:2:static char RCSid[] = \"$Header: /bbsrc/eqtytasks/wrntred/wrntred.cpp,v 1.6 2009/12/04 19:51:09 ychauhan Exp $\";" 2 "list-packages" 1 "junk.org" 99 "CMakeLists.txt" 98 "ldrv_feeds/" 97 "feeds_deleter.h" 96 "feeds_deleter.cpp:116:void Deleter::deleteFile(const eoffmsdb::FileSearchKey & key) const {" 95 "/Users/sdayts/notes/development_scratch.org" 27 "/Users/sdayts/workspaces/equity_future_feed_processor/equity_future_feed_processor.cpp" 82 "eqtyftdb_utils.cpp:82:        cupdate( eqtyftdb, &ctrl, const_cast<eqtyftdbrecord*>(&updatedRecord), 0 );" 94 "eqwrnt2/" 70 "lcw-integration-tester/" 93 "lcw-integration-tester.sh" 92 "vterm-mode-hook" 91 "global-hl-line-mode" 90 "mybig/" 89 "workspaces/" 71 "junk/" 88 "functions/" 87 "index/" 86 "f_xxefu2/" 85 "eqtyftdb_update.c" 83 "modify-syntax-entry" 84 "myinit.org" 81 "#s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data (name bool BloombergLP::effp::EquityFutureFeedProcessor::isFullListing() const kind 6 location #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data (uri file:///Users/sdayts/workspaces/equity_future_feed_processor/equity_future_feed_processor.h range #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data (start #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data (line 70 character 9)) end #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data (line 70 character 22))))))))" 79 "/Users/sdayts/notes/eqwrnt.org" 23 "     wrntred.cpp            23444 C++//            ~/workspaces/eqwrnt2/wrntred/wrntred.cpp" 3))) :frequency (quote #s(hash-table size 217 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("re" 1.5071482041283557 "save-buffers-kill-emacs" 0.3643956573894368 "     stats.csc2              1194 Fundamental      ~/workspaces/eqwrnt2/eqwrnt2acc/eqwrnt2acc/dbsetup/stats.csc2" 1.721167078660547 " *%  *Messages*              1507 Messages         " 0.3665919095193674 "swiper-include-line-number-in-search" 0.367694994502876 "swiper-goto-start-of-match" 0.36880139869897294 "swiper-action-recenter" 0.3699111320952587 "ivy-display-style" 0.3710242047093869 "ivy-use-selectable-prompt" 0.899453920581406 "ivy-push-view" 4.449281832529039 "ivy-switch-view" 6.416438752594621 "test1" 1.152885745730293 "     eqwrnt2acc_acce...      7743 C++//            ~/workspaces/eqwrnt2/eqwrnt2acc/eqwrnt2acc/eqwrnt2acc_accessor.h" 0.9717774258769553 "     eqwrnt2acc_acce...      8478 C++//            ~/workspaces/eqwrnt2/eqwrnt2acc/eqwrnt2acc/eqwrnt2acc_accessor_comdb2.h" 0.7971990768979685 "test2" 0.3823408133855036 "ivy-pop-view" 0.3834912872472453 "     *scratch*                144 Lisp Interaction " 0.3928205821550279 "{}" 0.39876629512077494 "     myinit.org             81297 Org              ~/.emacs.d/myinit.org" 0.40358759609853784 "org" 0.4060200622917276 "ivy.el" 1.3462450109697404 "{} myinit.org stats.csc2" 0.4146497284613113 "     eqwrnt2acc_acce...     64648 C++//            ~/workspaces/eqwrnt2/eqwrnt2acc/eqwrnt2acc/eqwrnt2acc_accessor_comdb2.cpp" 0.4184040795641506 "/Users/sdayts/workspaces/eqwrnt2/wrntred/wrntred.cpp" 1.3599424292856594 "/Users/sdayts/workspaces/eqwrnt2/wupdel/wupdel.t.cpp" 0.8894198681138391 "{} wrntred.cpp wupdel.t.cpp" 0.4272969591678097 "/Users/sdayts/.emacs.d/recentf" 0.42858270728967873 "recentf" 0.42987232426246613 "/Users/sdayts/.emacs.d/myinit.org" 2.7082521415931944 "ivy-fixed-height-minibuffer" 1.3132224715859089 "ivy--height" 0.4350697140184186 "ivy-height-alist" 1.31440071995722 "ivy-height" 0.4416549077612003 "counsel-git-grep" 2.2636303974898704 "counsel-git-log" 0.44431680976852356 "counsel-projectile-git-grep" 0.8980286158672419 "swiper" 1.3599282364234184 "" 2.4577902703824064 "(&optional initial-input initial-directory cmd)" 0.46201458542406293 "kill-emacs" 8.671324578230415 " *%  *Messages*              1601 Messages         " 0.46760059256584285 "sd/ivy-height" 0.47041887202816357 "ivy-posframe-border-width" 0.9696436373662575 "describe-face" 0.4789760369948792 "counsel-describe-face" 4.605503676410934 "internal-border" 1.9449470709459808 "posframe-hide-all" 0.4965601763518939 "ivy-posframe-border" 1.00664903216271 "README.md.abc" 3.099675645306265 "network-security.data" 1.0373434685034923 "README.md" 1.0498855141582213 "complete-symbol" 1.5914791939275255 "ivy-sort-max-size" 0.535294682013981 "server-visit-hook" 0.5369053982086068 "lsp-pwsh--sess-id" 0.5385209610918825 "gnus-level-killed" 1.093422934150716 "tooltip-mode-hook" 1.0933883895599152 "xmltok-standalone" 1.0933637150749405 "Info-current-file" 1.0933489104730514 "org-ignore-region" 0.5466719878103016 "ivy-posframe-style" 0.5549463880672914 "posframe.el" 0.5566162367776242 "module-file-suffix" 0.5582911101079481 "sd/open-org-init" 0.5599710231774805 "vterm" 2.8596226235994924 "*ansi-term-1*" 0.5667413768272211 "*vterm-1*" 2.490213997835479 "ansi-color-names-vector" 0.571872806964681 "vterm-color-default" 1.1575950183609574 " *   *scratch*                174 Lisp Interaction " 0.5787870596412764 "describe-key" 0.5857849093861247 "diff-mode.el.gz" 0.5875475520422515 "vterm-mode-map" 0.5893154985378651 "eqwrnt2acc_api.cpp" 0.5946513208958493 "pwd" 0.5964406428243222 "/Users/sdayts/notes/smf.xml" 0.6000354552366449 "smf.xml" 0.6018409781711584 "/Users/sdayts/notes/junk.org" 0.6036519339730777 "junk.org" 0.6054683389900478 "CMakeLists.txt" 0.6072902096189046 "ldrv_feeds/" 0.609117562305822 "feeds_deleter.h" 0.6109504135464614 "feeds_deleter.cpp:116:void Deleter::deleteFile(const eoffmsdb::FileSearchKey & key) const {" 0.6127887798861198 "/Users/sdayts/notes/development_scratch.org" 4.86313501414034 "/Users/sdayts/workspaces/equity_future_feed_processor/equity_future_feed_processor.cpp" 1.2750901297682167 "eqtyftdb_utils.cpp:82:        cupdate( eqtyftdb, &ctrl, const_cast<eqtyftdbrecord*>(&updatedRecord), 0 );" 0.6183371356998573 "eqwrnt2/" 1.3089659334229358 "lcw-integration-tester/" 0.623935727831958 "lcw-integration-tester.sh" 0.62581316733396 "vterm-mode-hook" 1.25728126723794 "global-hl-line-mode" 0.6314794494841262 "mybig/" 0.6352854445826206 "workspaces/" 1.3220383424258408 "junk/" 0.6391143788261682 "functions/" 0.6410374913000684 "index/" 0.6429663904714829 "f_xxefu2/" 0.6449010937527411 "eqtyftdb_update.c" 1.3015039035232228 "modify-syntax-entry" 0.6487879825562355 "myinit.org" 0.6605897747998594 "#s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data (name bool BloombergLP::effp::EquityFutureFeedProcessor::isFullListing() const kind 6 location #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data (uri file:///Users/sdayts/workspaces/equity_future_feed_processor/equity_future_feed_processor.h range #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data (start #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data (line 70 character 9)) end #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data (line 70 character 22))))))))" 0.6665709337861376 "equity_future_feed_processor.h" 0.66857666377747 "equity_future_feed_processor.cpp" 0.6705884290646641 "/Users/sdayts/workspaces/eqwrnt2/lddbutils/lddbutils/lddbutils_comdb2_util.cpp" 0.6726062478080883 "Functions: validateInsert (Other)" 0.6746301382227565 "#s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data (name static void BloombergLP::lddbutils::Comdb2Util::validateDelete(const char *sql, int rc) kind 254 location #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data (uri file:///Users/sdayts/workspaces/eqwrnt2/lddbutils/lddbutils/lddbutils_comdb2_util.cpp range #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data (start #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data (line 57 character 17)) end #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data (line 57 character 31))))))))" 0.676660118578492 "Functions: validateBind (Other)" 0.6786962072000923 "| p206         | meusr                         Mesa user machines  |
| p309         | tkusr                         Tokyo user machines |
| tkusr-rr-853 | tkusr                         Tokyo user machines |
| n129         | tkusr                         Tokyo user machines |
| n146         | tkusr                         Tokyo user machines |
| n152         | tkusr                         Tokyo user machines |
| p396         | tkusr                         Tokyo user machines |
| tkusr-ob-225 | tkusr                         Tokyo user machines |
| tkusr-ob-400 | tkusr                         Tokyo user machines |" 1.3635252052834375 "getwarrantlist/" 0.6889689195330736 "getwarrantlist.mk" 0.6910420456700839 "eqwrnt.org:1531:ZOMO cdbgwodb" 0.6952070309927615 "/Users/sdayts/notes/eqwrnt.org" 3.862625312547963 "sort-lines" 4.471207577617065 "delete-duplicate-lines" 3.032319998784453 "sd/split-current-line" 4.578095356913317 "/Users/sdayts/workspaces/eqwrnt2/lcw_validator/lcw_validator.m.cpp" 0.7250733439523728 "/Users/sdayts/workspaces/eqwrnt2/eqwrnt2acc/eqwrnt2acc/eqwrnt2acc_api.h" 1.5276896645757962 "split-line" 0.7427123967299725 "org-todo" 0.747188804859888 "/Users/sdayts/workspaces/eqwrnt2/lcw-integration-tester/lcw-integration-tester.sh" 0.7516921927868743 "/Users/sdayts/workspaces/eqwrnt2/lcw/lcw/lcw.t.mk" 0.7539540549517295 "sd/vc-refresh-state-all" 1.5592800646308627 "lcw/t/lcww_pipelines.t.cpp:1389:                            , \"BUSLOGIC->CHIPMUNK->COMDB2\"" 0.7584982177744161 "lcw/t/lcww_pipelines.t.cpp:1388:                            , \"BUSLOGIC->BAS->COMDB2\"" 0.7607805594527743 "lcw/t/lcww_dispatcher.t.cpp:128:        BREG_OVERRIDE_NICE_F(bbit_eqwrnt2_pipeline, \"BUSLOGIC->BAS->COMDB2\");" 1.5284356351171784 "lcw/t/lcwt_main.t.cpp:7:#include <basapi_tcpsyncbasclient.h>" 0.767668872977057 "lcw/lcww/lcww_dispatcher.cpp:67:, BasClient(NULL)" 1.5445983645655113 "lcw/lcww/lcww_dispatcher.h:49:    BasClientPtr                     BasClient;" 0.7722956964947572 "lcw/t/lcww_pipelines.t.cpp:73:            factory.BasClient = lddbutils::BasClientFactory<eqwrnt2acc::Request, eqwrnt2acc::Response>::createBasInProcessClient<s_eqwrnt2svc::RequestRouter, s_eqwrnt2svc::RequestProcessor>(" 0.776950406379376 "lcw/lcww/lcww_dispatcher.cpp:326:        factory.DbTier    = d_bregSettings.databaseTier();" 0.7792882711929549 "balance-windows" 1.6115365182857315 "ldrvexpirenotice/" 0.7887102894272789 "ldrvexpirenotice.m.cpp" 0.7910835400474212 "processWarrant: (Function)" 0.79346393184295 "/Users/sdayts/notes/development_notes.org" 0.7958514863018556 "eqwrnt2acc/eqwrnt2acc_accessor_bas.cpp:43:    const char LOG_CATEGORY[] = \"EQWRNT2ACC.ACCESSOR.BAS\";" 1.6134149101924746 "     eqwrnt2acc.gtes...      1897 Makefile         ~/workspaces/eqwrnt2/eqwrnt2acc/eqwrnt2acc/t/eqwrnt2acc.gtest.t.mk" 0.8054737627981655 "/Users/sdayts/workspaces/eqwrnt2/wrntcax/wrntcax.c" 0.8078974551636565 "/Users/sdayts/workspaces/eqwrnt2/lcw/lcw/t/lcww_util.t.h" 0.8103284404851119 "eqwrnt2acc/eqwrnt2acc_accessor_factory.cpp:127:    return bsl::make_shared<AccessorBas>(accessor, getDefaultBasClient());" 0.8152123778407558 "eqwrnt2acc/eqwrnt2acc_breg_settings.cpp:39:        return bbit_eqwrnt2_bas_service_pipeline__rc(list_ptr, numelts_ptr, maxelts);" 1.637791125178937 "eqwrnt2acc/eqwrnt2acc_breg_settings.cpp:81:          d_basServicePipeline" 1.657637798767731 "README.md:4:**eqwrnt2acc** is a DPKG library that contains modern C++ interface to [equity warrants database](https://bbgithub.dev.bloomberg.com/lddb/documentation/blob/master/eqwrnt.md). The library has a dependency on [lddbutils](https://bbgithub.dev.bloomberg.com/lddb/lddbutils) library." 0.8250687380258053 "eqwrnt2acc/eqwrnt2acc_breg_settings.cpp:37:    bool eqwrnt2_bas_service_pipeline_breg_accessor(char * list_ptr, int* numelts_ptr, int maxelts)" 0.8300415167526705 " *%  *Messages*             36986 Messages         " 0.8325391341551359 "eqwrnt2acc/eqwrnt2acc_breg_settings.cpp:17:    const bsl::string DEFAULT_EQWRNT2_BAS_PIPELINE = \"COMDB2\";" 0.837556937769312 "eqwrnt2acc/eqwrnt2acc_breg_settings.h:39:    bsl::string basServicePipeline();            // bbit_eqwrnt2_bas_service_pipeline" 0.8400771692771434 "/Users/sdayts/workspaces/eqwrnt2/lcw/lcw/lcw~w/accwrnt.f" 1.6953975201259985 "mc/sort-regions" 0.8451404054461714 "lcw/t/lcww_pipelines.t.cpp:12:#include <s_eqwrnt2svc_requestprocessor.h>" 0.8553586117313603 "org-table-convert-region" 18.002067942737916 "/Users/sdayts/workspaces/eqwrnt2/lcw/lcw/lcww/lcww_util_common_area.cpp" 0.8657003616774767 "org-odt-export-as-odf" 1.74184392505747 "org-table-export" 0.8709180316048211 "eqwrnt_calcrt_flds.org" 0.8788035596734672 "upcase-dwim" 0.9304302024748964 "upcase-word" 0.9332298921513504 "upcase-region" 0.93603800616986 "EQWRNT2" 0.9388545698794984 "lcw/lcww/lcww_util_common_area.cpp:46:    warrant.lastTradeDate()                = UtilCommonArea::getLastTradeDate();               // EQUIVALENCE(EW2BUF(81),EWDATE_E,EWLASTTRADEDATE)" 0.9416796087056153 "counsel-git-grep-occur" 1.9237012059799679 "url-setup-privacy-info" 0.9473552137914398 "ivy-occur-previous-line" 0.9502058312852957 "ivy-occur" 1.9118742789610845 "lcw/lcww/lcww_util_common_area.cpp:985:    return lddbutils::DateUtil::convertToYYYYMMDD(EWLASTTRADEDATE[2], EWLASTTRADEDATE[0], EWLASTTRADEDATE[1]);" 0.9559328248389055 "lcw/t/lcww_discovery_ewfunc_update.t.cpp:1003:        // setting of EWLASTTRADEDATE happens last, thus EWDATE_E must reflect" 0.9616943356035061 "ivy--occur-default" 0.9674905716180701 "fatal: -e option, '\\(E\\)[^W': Unmatched [ or [^" 0.9704017769489168 "ivy--occurs-list" 0.9733217421754432 "counsel--git-grep-occur-cmd" 0.9821344612135428 "     wrntred.cpp            23444 C++//            ~/workspaces/eqwrnt2/wrntred/wrntred.cpp" 0.988053892081 "wrntred.cpp:2:static char RCSid[] = \"$Header: /bbsrc/eqtytasks/wrntred/wrntred.cpp,v 1.6 2009/12/04 19:51:09 ychauhan Exp $\";" 0.991026973 "list-packages" 0.994009))) :serial-number (quote 338))
